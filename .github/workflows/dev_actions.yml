#dev_actions.yml

name: Compile and run tests

on:
  pull_request:
    # we'll also run this when pull requests to develop are opened
    branches: [develop]
    types: [merged]

jobs:
  Build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    env:
        Solution_Name: e-verse.Navisworks.ViewpointByLevel.sln
    outputs:
      Version: ${{ steps.gitversion.outputs.nuGetVersionV2 }} 
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}   
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
       # install and calculate the new version with GitVersion  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.5.0'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
        
        id: gitversion # step id used as reference for output values
      - name: Display GitVersion outputs
        run: |
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"   
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"    


      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Restore nuGet packages
        run: nuget restore $env:Solution_Name 

      - name: Run MSBuild
        id: run-msbuild
        run: |
          msbuild $env:Solution_Name /t:Clean,Build /p:platform="Any CPU" /p:Configuration=Release

      - name: Run tests
        id: run-tests
        run: |
          dotnet test
